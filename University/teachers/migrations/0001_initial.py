import base.validators
from django.db import migrations, models
import django.db.models.deletion

class Migration(migrations.Migration):
    
        initial = True
    
        dependencies = [
            ('base', '0001_initial'),
        ]
    
        operations = [
            migrations.CreateModel(
                name='Teacher',
                fields=[
                    ('teacher_id', models.AutoField(primary_key=True, serialize=False)),
                    ('teacher_status', models.CharField(choices=[('0', 'Competitive'), ('1', 'CLT'), ('2', 'Temporary'), ('3', 'Substitute'), ('4', 'Trainee'), ('5', 'Outsourced'), ('6', 'Curriculum'), ('7', 'Certificate'), ('8', 'Fired')], max_length=1, verbose_name='Teacher status')),
                    ('teacher_inep',  models.CharField(blank=True, max_length=12, null=True, unique=True, validators=[base.validators.validate_teacher_inep, base.validators.validate_digits], verbose_name='Inep')),
                    ('teacher_cpf', models.CharField(blank=True, max_length=14, null=True, unique=True, validators=[base.validators.validate_cpf], verbose_name='Cpf')),
                ('teacher_rg', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='RG')),
                    ('teacher_name', models.CharField(max_length=100, validators=[base.validators.validate_no_digits], verbose_name='Name')),
                    ('teacher_birth_date', models.CharField(max_length=10, validators=[base.validators.validate_data], verbose_name='Birth Date')),
                    ('teacher_sex', models.CharField(choices=[('1', 'Male'), ('2', 'Female')], max_length=1, verbose_name='sex')),
                ('teacher_color', models.CharField(choices=[('0', 'Not declared'), ('1', 'White'), ('2', 'Black'), ('3', 'Brown'), ('4', 'Yellow'), ('5', 'Indigenous')], default='0', max_length=1, verbose_name='color / Race')),
                ('teacher_nationality', models.CharField(choices=[('1', 'Colombian'), ('2', 'Colombian - Naturalized'), ('3', 'Foreign')], default='1', max_length=1, verbose_name='Nationality')),
                ('teacher_birth_state', models.CharField(blank=True, choices=[('AM', 'Amazonas'), ('ANT', 'Antioquia'), ('AR', 'Arauca'), ('ATL', 'Atlantico'), ('BOL', 'Bolivar'), ('BOY', 'Boyaca'), ('CAL', 'Caldas'), ('CAQ', 'Caqueta'), ('CAS', 'Casanare'), ('CAU', 'Cauca'), ('CES', 'Cesar'), ('CHO', 'Choco'), ('CUND', 'Cundinamarca'), ('COR', 'Cordoba'), ('DC', 'Distrito Capital de Bogota'), ('GUA', 'Guainia'), ('GUA', 'GUAVIARE'), ('HUI', 'Huila'), ('LAG', 'La Guajira'), ('MAG', 'Magdalena'), ('MET', 'Meta'), ('NAR', 'Narino'), ('NSA', 'Norte de Santander'), ('PUT', 'Putumayo'), ('QUI', 'Quindio'), ('RIS', 'Risaralda'), ('SAP', 'San Andres, Providencia y Santa Catalina'), ('SAN', 'Santander'), ('SUC', 'Sucre'), ('TOL', 'Tolima'), ('VAC', 'Valle del Cauca'), ('VAU', 'Vaupes'), ('VID', 'VICHADA')], default='AN', max_length=3, verbose_name='State')),
                ('teacher_birth_city', models.CharField(blank=True, max_length=100, verbose_name='Birth City')),
                ('teacher_residence_street', models.CharField(max_length=100, verbose_name='Street')),
                ('teacher_residence_number', models.CharField(max_length=10, verbose_name='Number')),
                ('teacher_residence_compliment', models.CharField(blank=True, max_length=100, verbose_name='Compliment')),
                ('teacher_residence_zone', models.CharField(choices=[('1', 'Urbana'), ('2', 'Rural')], default='1', max_length=1, verbose_name='Localização')),
                ('teacher_residence_location', models.CharField(choices=[('1', 'Settlement area'), ('2', 'Indigenous land'), ('3', 'Quilombola area'), ('7', 'Not in a prime location')], default='7', max_length=1, verbose_name='Distinctive location')),
                ('teacher_residence_neighborhood', models.CharField(blank=True, max_length=50, verbose_name='neighborhood')),
                ('teacher_cep_residence', models.CharField(max_length=9, validators=[base.validators.validate_cep], verbose_name='CEP')),
                ('teacher_residence_state', models.CharField(choices=[('AM', 'Amazonas'), ('ANT', 'Antioquia'), ('AR', 'Arauca'), ('ATL', 'Atlantico'), ('BOL', 'Bolivar'), ('BOY', 'Boyaca'), ('CAL', 'Caldas'), ('CAQ', 'Caqueta'), ('CAS', 'Casanare'), ('CAU', 'Cauca'), ('CES', 'Cesar'), ('CHO', 'Choco'), ('CUND', 'Cundinamarca'), ('COR', 'Cordoba'), ('DC', 'Distrito Capital de Bogota'), ('GUA', 'Guainia'), ('GUA', 'GUAVIARE'), ('HUI', 'Huila'), ('LAG', 'La Guajira'), ('MAG', 'Magdalena'), ('MET', 'Meta'), ('NAR', 'Narino'), ('NSA', 'Norte de Santander'), ('PUT', 'Putumayo'), ('QUI', 'Quindio'), ('RIS', 'Risaralda'), ('SAP', 'San Andres, Providencia y Santa Catalina'), ('SAN', 'Santander'), ('SUC', 'Sucre'), ('TOL', 'Tolima'), ('VAC', 'Valle del Cauca'), ('VAU', 'Vaupes'), ('VID', 'VICHADA')], default='AN', max_length=3, verbose_name='state')),
                ('teacher_city_residence', models.CharField(max_length=100, verbose_name='City of residence')),
                ('teacher_ddd', models.CharField(blank=True, max_length=2, validators=[base.validators.validate_ddd, base.validators.validate_digits], verbose_name='teacher - DDD Telephone')),
                ('teacher_telephone', models.CharField(blank=True, max_length=9, validators=[base.validators.validate_phone, base.validators.validate_digits], verbose_name='teacher - telephone')),
                ('teacher_email', models.EmailField(blank=True, max_length=250, null=True, unique=True, verbose_name='Email')),
                ('teacher_affiliation', models.CharField(choices=[('0', 'Undeclared/Unknown'), ('1', 'Affiliation 1 and/or Affiliation 2')], max_length=1, verbose_name='Affiliation')),
                ('teacher_affiliation1_nome', models.CharField(blank=True, max_length=100, validators=[base.validators.validate_no_digits], verbose_name='Membership 1 - Name')),
                ('teacher_affiliation2_nome', models.CharField(blank=True, max_length=100, validators=[base.validators.validate_no_digits], verbose_name='Membership 2 - Name')),
                ('teacher_teaching_other_place', models.CharField(blank=True, choices=[('1', 'No'), ('2', 'Hospital'), ('3', 'Home'), ('4', 'Outdoor installations')], default='1', max_length=1, verbose_name='Teaching in other place')),
                ('teacher_nivel_schooling', models.CharField(choices=[('1', 'Did not finish primary school'), ('2', 'Teaching fundamental'), ('7', 'Teaching medium'), ('6', 'Teaching superior')], max_length=1, verbose_name='Higher level of schooling')),
                ('teacher_type_teaching_medium', models.CharField(blank=True, choices=[('1', 'General training'), ('2', 'Normal mode (teaching)'), ('3', 'Technical course'), ('4', 'Indigenous teaching, normal mode')], max_length=1, verbose_name='Type of secondary education attended')),
                ('teacher_course_conclusion1', models.CharField(blank=True, max_length=4, validators=[base.validators.validate_year, base.validators.validate_digits], verbose_name='Year of completion')),
                ('teacher_course_public1', models.CharField(blank=True, max_length=1, verbose_name='Pública')),
                ('teacher_course_private1', models.CharField(blank=True, max_length=1, verbose_name='private')),
                ('teacher_course_institution1', models.CharField(blank=True, max_length=100, verbose_name='Higher Education Institution')),
                ('teacher_course_conclusion2', models.CharField(blank=True, max_length=4, validators=[base.validators.validate_year, base.validators.validate_digits], verbose_name='Year of completion')),
                ('teacher_course_public2', models.CharField(blank=True, max_length=1, verbose_name='Public')),
                ('teacher_course_private2', models.CharField(blank=True, max_length=1, verbose_name='Private')),
                ('teacher_course_institution2', models.CharField(blank=True, max_length=100, verbose_name='Higher Education Institution')),
                ('teacher_course_conclusion3', models.CharField(blank=True, max_length=4, validators=[base.validators.validate_year, base.validators.validate_digits], verbose_name='Year of completion')),
                ('teacher_course_public3', models.CharField(blank=True, max_length=1, verbose_name='Pública')),
                ('teacher_course_private3', models.CharField(blank=True, max_length=1, verbose_name='private')),
                ('teacher_course_institution3', models.CharField(blank=True, max_length=100, verbose_name='Higher Education Institution')),
                ('teacher_post_graduate_completed', models.CharField(choices=[('0', 'No'), ('1', 'Yes')], max_length=1, verbose_name='Has completed a postgraduate degree')),
                ('teacher_specialization', models.CharField(blank=True, max_length=1, verbose_name='Specialization')),
                ('teacher_master\'s degree', models.CharField(blank=True, max_length=1, verbose_name='Master\'s Degree')),
                ('teacher_doctorate', models.CharField(blank=True, max_length=1, verbose_name='Doctorate')),
                ('teacher_others_courses', models.CharField(choices=[('0', 'No'), ('1', 'Yes')], max_length=1, verbose_name='other specific courses')),
                ('teacher_nursery_course', models.CharField(blank=True, max_length=1, verbose_name='Nursery')),
                ('teacher_school_pre_course', models.CharField(blank=True, max_length=1, verbose_name='Pre-school')),
                ('teacher_course_fundamental1', models.CharField(blank=True, max_length=1, verbose_name='Early years of primary education')),
                ('teacher_course_fundamental2', models.CharField(blank=True, max_length=1, verbose_name='Final years of primary education')),
                ('teacher_course_teaching_medium', models.CharField(blank=True, max_length=1, verbose_name='teaching medium')),
                ('teacher_course_special_education', models.CharField(blank=True, max_length=1, verbose_name='Special education')),
                ('teacher_course_young_adults', models.CharField(blank=True, max_length=1, verbose_name='Youth and adult education')),
                ('teacher_course_indigenous_education', models.CharField(blank=True, max_length=1, verbose_name='Indigenous education')),
                ('teacher_course_field_education', models.CharField(blank=True, max_length=1, verbose_name='Rural education')),
                ('teacher_course_environmental_education', models.CharField(blank=True, max_length=1, verbose_name='Environmental education')),
                ('teacher_course_human_rights', models.CharField(blank=True, max_length=1, verbose_name='Human rights education')),
                ('teacher_course_sexual_diversity', models.CharField(blank=True, max_length=1, verbose_name='Gender and sexual diversity')),
                ('teacher_course_child_rights', models.CharField(blank=True, max_length=1, verbose_name='Rights of children and adolescents')),
                ('teacher_course_ethnic_relations', models.CharField(blank=True, max_length=1, verbose_name='Education for ethnic-racial relations')),
                ('teacher_course_school_management', models.CharField(blank=True, max_length=1, verbose_name='School management')),
                ('teacher_course_others', models.CharField(blank=True, max_length=1, verbose_name='Others courses')),
                ('teacher_justification_documents', models.CharField(blank=True, choices=[('1', 'The student does not have the requested documents'), ('2', 'The school has not received the requested documents')], max_length=1, verbose_name='Justificativa da falta de documentos')),
                ('teacher_disability', models.CharField(choices=[('0', 'No'), ('1', 'Yes')], max_length=1, verbose_name='Has a physical disability')),
                ('teacher_blindness', models.CharField(blank=True, max_length=1, verbose_name='Blindness')),
                ('teacher_low_view', models.CharField(blank=True, max_length=1, verbose_name='Low View')),
                ('teacher_deafness', models.CharField(blank=True, max_length=1, verbose_name='Deafness')),
                ('teacher_disability_hearing', models.CharField(blank=True, max_length=1, verbose_name='Hearing Disability')),
                ('teacher_deafblindness', models.CharField(blank=True, max_length=1, verbose_name='Deafblindness')),
                ('teacher_physical_disability', models.CharField(blank=True, max_length=1, verbose_name='Physical disability')),
                ('teacher_intellectual_disability', models.CharField(blank=True, max_length=1, verbose_name='Intellectual disability')),
                ('teacher_multiple_disability', models.CharField(blank=True, max_length=1, verbose_name='Multiple disabilities')),
                ('teacher_autismo', models.CharField(blank=True, max_length=1, verbose_name='Autismo')),
                ('teacher_high_abilities', models.CharField(blank=True, max_length=1, verbose_name='High_abilities')),
                ('teacher_urgency_name', models.CharField(blank=True, max_length=100, verbose_name='Urgency - Name')),
                ('teacher_urgency_ddd', models.CharField(blank=True, max_length=2, validators=[base.validators.validate_ddd, base.validators.validate_digits], verbose_name='Urgency - DDD')),
                ('teacher_urgency_telephone', models.CharField(blank=True, max_length=9, validators=[base.validators.validate_phone, base.validators.validate_digits], verbose_name='Urgency - telephone')),
                ('teacher_urgency_parentesco', models.CharField(blank=True, max_length=50, verbose_name='Urgência - Parentesco')),
                ('teacher_urgency_procedimentos', models.TextField(blank=True, verbose_name='Emergency procedures')),
                ('teacher_alergy', models.CharField(blank=True, max_length=1, verbose_name='Alergy')),
                ('teacher_alergy_type', models.TextField(blank=True, max_length=1000, verbose_name='Type of allergy(s) and precautions')),
                ('teacher_differentiated_care', models.TextField(blank=True, max_length=1000, verbose_name='Differentiated_care')),
                ('teacher_health_plan', models.CharField(blank=True, max_length=1, verbose_name='Health plan')),
                ('teacher_health_plan_name', models.CharField(blank=True, max_length=50, verbose_name='Name of Health Plan')),
                ('teacher_health_plan_ddd', models.CharField(blank=True, max_length=2, validators=[base.validators.validate_ddd, base.validators.validate_digits], verbose_name='DDD')),
                ('teacher_health_plan_telephone', models.CharField(blank=True, max_length=9, validators=[base.validators.validate_phone, base.validators.validate_digits], verbose_name='telephone')),
                ('teacher_health_plan_email', models.EmailField(blank=True, max_length=250, verbose_name='Email')),
                ('teacher_agreement', models.CharField(blank=True, max_length=1, verbose_name='Agreement')),
                ('teacher_agreement_nome', models.CharField(blank=True, max_length=50, verbose_name='Agreement name')),
                ('teacher_agreement_ddd', models.CharField(blank=True, max_length=2, validators=[base.validators.validate_ddd, base.validators.validate_digits], verbose_name='DDD')),
                ('teacher_agreement_telephone', models.CharField(blank=True, max_length=9, validators=[base.validators.validate_phone, base.validators.validate_digits], verbose_name='telephone')),
                ('teacher_agreement_email', models.EmailField(blank=True, max_length=250, verbose_name='Email')),
                ('teacher_programa_social', models.CharField(blank=True, max_length=1, verbose_name='Agreement')),
                ('teacher_programa_social_name', models.CharField(blank=True, max_length=50, verbose_name='Agreement name')),
                ('teacher_programa_social_ddd', models.CharField(blank=True, max_length=2, validators=[base.validators.validate_ddd, base.validators.validate_digits], verbose_name='DDD')),
                ('teacher_programa_social_telephone', models.CharField(blank=True, max_length=9, validators=[base.validators.validate_phone, base.validators.validate_digits], verbose_name='Telephone')),
                ('teacher_programa_social_email', models.EmailField(blank=True, max_length=250, verbose_name='Email')),
                ('teacher_internship', models.CharField(blank=True, max_length=1, verbose_name='Internship')),
                ('teacher_internship_institution', models.CharField(blank=True, max_length=100, verbose_name='Institution')),
                ('teacher_internship_time', models.CharField(blank=True, max_length=100, verbose_name='Time')),
                ('teacher_internship_comments', models.TextField(blank=True, max_length=1000, verbose_name='Comments on the internship')),
                ('teacher_comments', models.TextField(blank=True, max_length=1000, verbose_name='Comments')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Date of change')),
                ('teacher_knowdledge_area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='teacherareaknowledge1', to='base.knowledge', verbose_name='Curriculum component')),
                ('teacher_knowledge_area2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='teacherareaknowledge2', to='base.knowledgearea', verbose_name='Componenete curricular')),
                ('teacher_knowledge_area3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='teacherareaknowledge3', to='base.knowledgearea', verbose_name='Componenete curricular')),
                ('teacher_course1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='teachercourse1', to='base.coursefs', verbose_name='course Higher Education')),
                ('teacher_course2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='teachercourse2', to='base.coursefs', verbose_name='course Higher Education')),
                ('teacher_course3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='teachercourse3', to='base.coursefs', verbose_name='course Higher Education')),
                ('teacher_pais_birth', models.ForeignKey(default='Colombia', on_delete=django.db.models.deletion.DO_NOTHING, related_name='teacherpaisbirth', to='base.country', verbose_name='Birth Country')),
                ('teacher_residence_country', models.ForeignKey(default='Colombia', on_delete=django.db.models.deletion.DO_NOTHING, related_name='teacherpaisresidence', to='base.country', verbose_name='Country'))
            ],
            options={
                'verbose_name': 'Teacher',
                'verbose_name_plural': 'Teachers',
            },
        ),
    ]
        
